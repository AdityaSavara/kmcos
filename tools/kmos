#!/usr/bin/env python

#    Copyright 2009-2011 Max J. Hoffmann (mjhoffmann@gmail.com)
#    This file is part of kmos.
#
#    kmos is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    kmos is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with kmos.  If not, see <http://www.gnu.org/licenses/>.

import os
import optparse

parser = optparse.OptionParser(
    """Usage: %prog [help] (edit|export|build|view) [options]""")

options, args = parser.parse_args()

if len(args) < 1:
    parser.error('Command expected')

if args[0] == 'help':
    if len(args) < 2:
        parser.error('Which help do you  want?')
    if args[1] == 'edit':
        print("""Usage: kmos edit <xml-file>
                        open the kmos xml-file in a GUI to edit
                        the model.""")
    elif args[1] == 'view':
        print("""Usage: kmos view
                        Except a kmc_model.so and kmc_settings in the
                        same directory and will start to simulate the
                        model visually""")
    elif args[1] == 'export':
        print("""Usage: kmos export <xml-file> [<export-path>]
                        Take a kmos xml-file and export all generated
                        source code to the export-path. There it will
                        try to build the kmc_model.so.""")
    else:
        print("Command not know or not documented.")

elif args[0] == 'edit':
    if len(args) < 2:
        print('No XML file provided, starting a new model.')
        args.append('')
    os.system('kmos-editor %s' % args[1])
elif args[0] == 'export':
    if len(args) < 2:
        parser.error('XML file and export path expected.')
    if len(args) < 3:
        out_dir = os.path.splitext(args[1])[0]
        print('No export path provided. Exporting to %s' % out_dir)
        args.append(out_dir)
    os.system('kmos-export-program %s %s' % (args[1], args[2]))
elif args[0] == 'build':
    os.system('kmos-build')
elif args[0] == 'view':
    os.system('kmos-view')

else:
    parser.error('Command not understood.')
