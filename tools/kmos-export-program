#!/usr/bin/env python
#    Copyright 2009-2011 Max J. Hoffmann (mjhoffmann@gmail.com)
#    This file is part of kmos.
#
#    kmos is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    kmos is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with kmos.  If not, see <http://www.gnu.org/licenses/>.
import sys
sys.path.append('..')
import optparse
import os
import shutil
from glob import glob


import kmos.types
import kmos.io

def main():
    usage = 'usage: %prog xml file export dir\n'\
        + '    existing export directory will over-written!'

    parser = optparse.OptionParser(usage=usage)
    parser.add_option('-s', '--source-only',
                      action='store_true',
                      dest='source_only',
                      default=False,
                      help='Export source code only, don\'t compile.')
    (options, args) = parser.parse_args()

    if len(args) != 2:
        parser.print_help()
        exit()

    xml_file = args[0]
    export_dir = os.path.join(args[1], 'src')

    project = kmos.types.Project()
    project.import_xml_file(xml_file)

    kmos.io.export_source(project, export_dir)

    cwd = os.path.abspath(os.curdir)
    if os.uname()[0] == 'Linux' and not options.source_only:
        os.chdir(export_dir)
        os.system("kmos-build")
        for out in glob('kmc_*'):
            try:
                shutil.move(out, '..')
            except:
                print('%s already exists. I refuse to overwrite it.' % out)
                print('Please move it somewhere else or rename it and')
                print('rerun me.')
                raise

if __name__ == '__main__':
    main()
