inside \ini_test\ --> got the tests to work after editing types.py and utils\__init.py . Ini's work. For mini_101.ini, foo.ini, and the ZGB ini, kmcos export followed by benchmark works. 

inside \complex render test\ works now also

inside \test_types\  test_coordinates_list.py  and  test_xml_ini_conversion.py  both run and pass (the 2nd one has 2 tests in it)

inside \MyFirstThrottling\ is a throttling unit test example that works  #Dec 3rd 2020: Currently needs kmcos export to be run each time from commnand line first. test_1.py needs to be fixed to remove the old files and then do the export when run. The test takes less than 1 minute.

inside \SQERTSS_unit_tests\ are some SQERTSS (throttling) unit tests that work #Dec 3rd 2020: Currently needs kmcos export to be run each time from commnand line first, and/or test_0.py needs to be run first. test_0.py needs to be fixed to remove the old files and then do the export when run.

inside \test_acf\  As of April 1st 2021, test_1.py and test_2.py and test_3.py all run and pass. Stored trajectories are used for comparison. Should work even with different random seeds on different computers.

inside \test_run\  --> upgraded to UnitTesterSG. Now test_1.py and test_2.py both pass. test_3.py fails, does not create the final ".so" file, and displays an error that can be traced, so it seems the otf backend is not completely working yet. However, running test_3.py provides an opportunity to debug the otf backend creation.  Using "pytest" in this directory mysteriously allows all 3 tests to pass even though test_3.py should not pass.

inside \export_test\test_build_run.py runs but test_import_export.py does not run to completion. I have separated test_import_export.py into test_1.py through test_8.py.  Only a small number are passing.  It is possible that some of the failing ones are actually operating correctly, but I have not investigated as that is not a priority. I believe that the case statements are being exported correctly but in a different order, but that may not be the only issue.

python "test_cli_generation.py" runs and updates the files inside \test_cli_generated_model\   Going inside and typing "kmcos benchmark" does not work. Says no model dimension. However, there is an old xml file in the directory. Pulling the xml 'code' out of the newly generated kmc_settings.py and putting it into a file called test_cli_generated_model_Nov2020.xml shows that there are a few differences (a diff comparison between the two xmls is useful). The most notable of the differences is the lattice_cell_size showing extra zeros in the new xml. (it seems like some kind of some minor error related to parsing or array manipulation or something like that, so is really a minor error somewhere in our code).


inside \accelerated_tests\  added and works on Jan. 8th 2021.  On April 1st 2021, tried running the tests. Test_1.py and Test_2.py passed, but Test_3.py is failing. Inspection of acc_backend__do_acc_steps_local_smart shows that it is just failing due to random fluctuation. The calculated result is coming out at 6E-7 rather than 4E-7, which is outside of the tolerance. However, the previous steps inside CO_oxidation_Ruo2__acc_backend__do_acc_steps_TOFs_and_Coverages.csv are already within that tolerance.

inside scaling_thermochemistry_tests\ added and works on Jan 11 2021. On April 1st 2021 it gives a failure if running with pytest. Running test_1.py by itself and looking closely at what is printed out, the expected and calculated results do not match so need to check why.