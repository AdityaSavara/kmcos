Functionality
  * make base.set_system_name and base.save_system(<seed_name>)
  * standardize definition of those parameters that are logged
    in the output file (header/data)
  * Explicitly allow for non-orthogonal unit cells in
    GUI process editor
  * make sure one can (re)start and stop viewer from ipython ('kmos run')
  * kmos.gui.Editor should be able to process
    project_tree passed in automatically
    (and save changes directly to it)
    [should be transparent to the user]
  * add a tags field to all entities: parameters, process, species, layer
  * build standard class for model builder
  * change book-keeping/memory management from
    process based to site based
    (better storage for amorphous geometries)
  * add/fix undo function to process editor
  * improve layer editor: make handling better (removing/cancelling sites)
    and make better guess for z-position of site
  * improve speed by inlining function call in generated code
    [keep it optional in case inlining increases code base too much]
  * put XML/DTD handling into stdlib only tools (validation currenty not supported)


Project related
  * configure pip mechanism
  * build virtualenv test environment(s): 2.4-3.0
  * build deb package

Future/optional projects:
  * do 2D version of process editor using ASE
    facilities first: basically rid gtkcanvas
    in favor or pygoocanvas and include atoms
    in background
  * check-out blender and maybe additional 3D programs
    for good gui design of placing sites or species
    in 3D space


Defered:
  * build-up library of lattices which can be
    simply chosen from (making new lattice is very easy
    and fast)

Refactorization
  * remove output functionality
